package com.bigcustard.silverbars.model;

public final class Order {

    private static final String TO_STRING_TEMPLATE = "%s: %.1f kg for Â£%.2f [%s]";

    private final String userId;
    private final int quantityInGrams; // Quantities held in grams to avoid rounding issues.
    private final Bid bid;


    public Order(String userId, int quantityInGrams, Bid bid) {

        if(bid == null) {
            throw new IllegalArgumentException("Bid must not be null");
        }

        if(quantityInGrams <= 0) {
            throw new IllegalArgumentException("QuantityInGrams must be greater than zero");
        }

        this.userId = userId;
        this.quantityInGrams = quantityInGrams;
        this.bid = bid;
    }

    public String getUserId() {

        return userId;
    }

    public int getQuantityInGrams() {

        return quantityInGrams;
    }

    public Bid getBid() {

        return bid;
    }

    @Override
    public boolean equals(Object o) {

        // Generated by IntelliJ
        if (this == o) return true;
        if (!(o instanceof Order)) return false;

        Order order = (Order) o;

        return quantityInGrams == order.quantityInGrams && userId.equals(order.userId) && bid.equals(order.bid);
    }

    @Override
    public int hashCode() {

        // Generated by IntelliJ
        int result = userId.hashCode();
        result = 31 * result + quantityInGrams;
        result = 31 * result + bid.hashCode();
        return result;
    }

    @Override
    public String toString() {

        return String.format(TO_STRING_TEMPLATE, bid.getBuyOrSell(), quantityInGrams / 1000f, bid.getPencePerKg() / 100f, userId);
    }
}
