package com.bigcustard.model;

public final class Bid {

    private final OrderType buyOrSell;
    private final int pencePerKg; // Prices held in pence to avoid rounding issues.

    public Bid(OrderType buyOrSell, int pencePerKg) {

        if(buyOrSell == null) {
            throw new IllegalArgumentException("OrderType must not be null");
        }

        if(pencePerKg <= 0) {
            throw new IllegalArgumentException("Price must be greater than zero");
        }

        this.buyOrSell = buyOrSell;
        this.pencePerKg = pencePerKg;
    }

    public OrderType getBuyOrSell() {

        return buyOrSell;
    }

    public int getPencePerKg() {

        return pencePerKg;
    }

    @Override
    public boolean equals(Object o) {

        // Generated by IntelliJ
        if (this == o) return true;
        if (!(o instanceof Bid)) return false;

        Bid bid = (Bid) o;

        return pencePerKg == bid.pencePerKg && buyOrSell == bid.buyOrSell;

    }

    @Override
    public int hashCode() {

        return pencePerKg * OrderType.values().length + buyOrSell.ordinal(); // Guaranteed unique
    }
}
