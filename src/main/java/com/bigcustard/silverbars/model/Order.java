package com.bigcustard.silverbars.model;

import java.math.BigDecimal;
import java.util.Objects;

public final class Order {

    private static final String TO_STRING_TEMPLATE = "%s: %.1f kg for Â£%.2f [%s]";

    private final String userId;
    private final BigDecimal quantity;
    private final Bid bid;


    public Order(String userId, BigDecimal quantity, Bid bid) {

        Objects.requireNonNull(userId, "Parameter userId must not be null");
        Objects.requireNonNull(bid, "Parameter bid must not be null");
        Objects.requireNonNull(quantity, "Parameter quantity must not be null");

        if(quantity.compareTo(BigDecimal.ZERO) <= 0) {
            throw new IllegalArgumentException("Parameter quantity must be greater than zero");
        }

        this.userId = userId;
        this.quantity = quantity;
        this.bid = bid;
    }

    public String getUserId() {

        return userId;
    }

    public BigDecimal getQuantity() {

        return quantity;
    }

    public Bid getBid() {

        return bid;
    }

    @Override
    public boolean equals(Object o) {

        // Generated by IntelliJ
        if (this == o) return true;
        if (!(o instanceof Order)) return false;

        Order order = (Order) o;

        if (!userId.equals(order.userId)) return false;
        if (!quantity.equals(order.quantity)) return false;
        return bid.equals(order.bid);

    }

    @Override
    public int hashCode() {

        // Generated by IntelliJ
        int result = userId.hashCode();
        result = 31 * result + quantity.hashCode();
        result = 31 * result + bid.hashCode();
        return result;
    }

    @Override
    public String toString() {

        return String.format(TO_STRING_TEMPLATE, bid.getBuyOrSell(), quantity, bid.getPricePerKg(), userId);
    }
}
